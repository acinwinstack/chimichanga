kind: ConfigMap
apiVersion: v1
metadata:
  name: calico-config
  namespace: kube-system
data:
  etcd_endpoints: "{{ etcd_endpoints }}"
  calico_backend: "bird"
  cni_network_config: |-
    {
        "name": "k8s-pod-network",
        "cniVersion": "0.1.0",
        "type": "calico",
        "etcd_endpoints": "__ETCD_ENDPOINTS__",
        "etcd_ca_cert_file": "{{ etcd.certs.ca }}",
        "etcd_cert_file": "{{ etcd.certs.cert }}",
        "etcd_key_file": "{{ etcd.certs.cert_key }}",
        "log_level": "info",
        "mtu": 1500,
        "ipam": {
            "type": "calico-ipam"
        },
        "policy": {
            "type": "k8s",
            "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
            "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
        },
        "kubernetes": {
            "kubeconfig": "__KUBECONFIG_FILEPATH__"
        }
    }
---
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: calico-node
  namespace: kube-system
  labels:
    cni: calico
spec:
  selector:
    matchLabels:
      cni: calico
  template:
    metadata:
      labels:
        cni: calico
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      hostNetwork: true
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      serviceAccountName: calico-cni-plugin
      containers:
      - name: calico-node
        image: quay.io/calico/node:v2.6.2
        env:
          - name: CLUSTER_TYPE
            value: "k8s,bgp"
          - name: ETCD_ENDPOINTS
            valueFrom:
              configMapKeyRef:
                name: calico-config
                key: etcd_endpoints
          - name: CALICO_NETWORKING_BACKEND
            valueFrom:
              configMapKeyRef:
                name: calico-config
                key: calico_backend
          - name: CALICO_DISABLE_FILE_LOGGING
            value: "true"
          - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
            value: "ACCEPT"
          - name: FELIX_HEALTHENABLED
            value: "true"
          - name: CALICO_IPV4POOL_CIDR
            value: "{{ pod_network_cidr }}"
          - name: CALICO_IPV4POOL_IPIP
            value: "always"
          - name: ETCD_CA_CERT_FILE
            value: "{{ etcd.certs.ca }}"
          - name: ETCD_CERT_FILE
            value: "{{ etcd.certs.cert }}"
          - name: ETCD_KEY_FILE
            value: "{{ etcd.certs.cert_key }}"
          - name: FELIX_IPV6SUPPORT
            value: "false"
          - name: FELIX_LOGSEVERITYSCREEN
            value: "info"
          {% if cni_iface != '' -%}
          - name: IP_AUTODETECTION_METHOD
            value: "{{ cni_iface }}"
          - name: IP6_AUTODETECTION_METHOD
            value: "{{ cni_iface }}"
          {% endif -%}
          - name: IP
            value: ""
          - name: FELIX_IPINIPMTU
            value: "1440"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 250m
        volumeMounts:
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /var/run/calico
            name: var-run-calico
            readOnly: false
          - name: etcd-ca-certs
            mountPath: {{ etcd.dir.ssl }}
            readOnly: true
      - name: install-cni
        image: quay.io/calico/cni:v1.11.0
        command: ["/install-cni.sh"]
        env:
          - name: ETCD_ENDPOINTS
            valueFrom:
              configMapKeyRef:
                name: calico-config
                key: etcd_endpoints
          - name: ETCD_CA_CERT_FILE
            value: "{{ etcd.certs.ca }}"
          - name: ETCD_CERT_FILE
            value: "{{ etcd.certs.cert }}"
          - name: ETCD_KEY_FILE
            value: "{{ etcd.certs.cert_key }}"
          - name: CNI_NETWORK_CONFIG
            valueFrom:
              configMapKeyRef:
                name: calico-config
                key: cni_network_config
        volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
      volumes:
        - name: etcd-ca-certs
          hostPath:
            path: {{ etcd.dir.ssl }}
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: var-run-calico
          hostPath:
            path: /var/run/calico
        - name: cni-bin-dir
          hostPath:
            path: {{ kubernetes.dir.cni_bin }}
        - name: cni-net-dir
          hostPath:
            path: {{ kubernetes.dir.cni }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: calico-policy-controller
  namespace: kube-system
  labels:
    cni: calico
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-policy-controller
      namespace: kube-system
      labels:
        cni: calico
    spec:
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      hostNetwork: true
      serviceAccountName: calico-kube-controllers
      containers:
      - name: calico-policy-controller
        image: quay.io/calico/kube-controllers:v1.0.0
        env:
          - name: ETCD_ENDPOINTS
            valueFrom:
              configMapKeyRef:
                name: calico-config
                key: etcd_endpoints
          - name: ETCD_CA_CERT_FILE
            value: "{{ etcd.certs.ca }}"
          - name: ETCD_CERT_FILE
            value: "{{ etcd.certs.cert }}"
          - name: ETCD_KEY_FILE
            value: "{{ etcd.certs.cert_key }}"
          - name: CONFIGURE_ETC_HOSTS
            value: "true"
        volumeMounts:
          - name: etcd-ca-certs
            mountPath: {{ etcd.dir.ssl }}
            readOnly: true
      volumes:
        - name: etcd-ca-certs
          hostPath:
            path: {{ etcd.dir.ssl }}
