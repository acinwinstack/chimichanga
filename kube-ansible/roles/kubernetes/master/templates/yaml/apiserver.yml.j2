apiVersion: v1
kind: Pod
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  labels:
    component: kube-apiserver
    tier: control-plane
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers :
  - name: "{{ images.apiserver.name }}"
    image: "{{ images.apiserver.repos }}{{ images.apiserver.name }}:{{ images.apiserver.tag }}"
    command:
      - kube-apiserver
      - --v=0
      - --logtostderr=true
      - --allow-privileged=true
      - --bind-address=0.0.0.0
      - --secure-port={{ api_secure_port }}
      - --insecure-port=0
      - --advertise-address={{ lb_vip_address }}
      - --service-cluster-ip-range={{ service_ip_range }}
      - --service-node-port-range={{ service_node_port_range }}
      - --etcd-servers={{ etcd_servers }}
      - --etcd-cafile={{ etcd.certs.ca }}
      - --etcd-certfile={{ etcd.certs.cert }}
      - --etcd-keyfile={{ etcd.certs.cert_key }}
      - --client-ca-file={{ kubernetes.certs.ca }}
      - --tls-cert-file={{ kubernetes.certs.apiserver }}
      - --tls-private-key-file={{ kubernetes.certs.apiserver_key }}
      - --kubelet-client-certificate={{ kubernetes.certs.apiserver }}
      - --kubelet-client-key={{ kubernetes.certs.apiserver_key }}
      - --service-account-key-file={{ kubernetes.certs.sa_pub }}
      - --kubelet-preferred-address-types={{ preferred_address }}
      - --admission-control={{ admission_controls }}
      - --authorization-mode={{ authorization_mode }}
      {% if kube_version.split(".")[1]|int < 8 -%}
      - --experimental-bootstrap-token-auth
      {% else -%}
      - --enable-bootstrap-token-auth=true
      {% endif -%}
      - --requestheader-client-ca-file={{ kubernetes.certs.front_ca }}
      - --proxy-client-cert-file={{ kubernetes.certs.front_client }}
      - --proxy-client-key-file={{ kubernetes.certs.front_client_key }}
      - --requestheader-allowed-names=aggregator
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-username-headers=X-Remote-User
      - --audit-log-maxage=30
      - --audit-log-maxbackup=3
      - --audit-log-maxsize=100
      - --audit-log-path={{ kubernetes.dir.log }}/audit.log
      - --audit-policy-file={{ kubernetes.polices.audit }}
      - --runtime-config=api/all
      - --experimental-encryption-provider-config={{ kubernetes.polices.encryption }}
      {% if feature_gates.apiserver != "" -%}
      - --feature-gates={{ feature_gates.apiserver }}
      {% endif -%}
      - --token-auth-file={{ kubernetes.polices.token }}
      {% if extra_auth.basic is defined -%}
      - --basic-auth-file={{ kubernetes.polices.user }}
      {% endif -%}
      - --event-ttl=1h
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: {{ api_secure_port }}
        scheme: HTTPS
      initialDelaySeconds: 15
      timeoutSeconds: 15
    resources:
      requests:
        cpu: 250m
    volumeMounts:
    - mountPath: /etc/ssl/certs
      name: system-certs
      readOnly: true
    - mountPath: {{ kubernetes.dir.log }}
      name: k8s-audit-log
    - mountPath: {{ kubernetes.dir.pki }}
      name: k8s-certs
      readOnly: true
    - mountPath: {{ kubernetes.polices.encryption }}
      name: encryption-config
      readOnly: true
    - mountPath: {{ kubernetes.polices.audit }}
      name: audit-config
      readOnly: true
    - mountPath: {{ kubernetes.polices.token }}
      name: token-csv
      readOnly: true
    {% if extra_auth.basic is defined -%}
    - mountPath: {{ kubernetes.polices.user }}
      name: user-csv
      readOnly: true
    {% endif -%}
    - mountPath: {{ etcd.dir.ssl }}
      name: etcd-ca-certs
      readOnly: true
  volumes:
  - hostPath:
      path: /etc/ssl/certs
      type: DirectoryOrCreate
    name: system-certs
  - hostPath:
      path: {{ kubernetes.dir.log }}
      type: DirectoryOrCreate
    name: k8s-audit-log
  - hostPath:
      path: {{ kubernetes.dir.pki }}
      type: DirectoryOrCreate
    name: k8s-certs
  - hostPath:
      path: {{ kubernetes.polices.encryption }}
      type: FileOrCreate
    name: encryption-config
  - hostPath:
      path: {{ kubernetes.polices.audit }}
      type: FileOrCreate
    name: audit-config
  - hostPath:
      path: {{ kubernetes.polices.token }}
      type: FileOrCreate
    name: token-csv
  {% if extra_auth.basic is defined -%}
  - hostPath:
      path: {{ kubernetes.polices.user }}
      type: FileOrCreate
    name: user-csv
  {% endif -%}
  - hostPath:
      path: {{ etcd.dir.ssl }}
      type: DirectoryOrCreate
    name: etcd-ca-certs
