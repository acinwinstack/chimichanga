---

- name: Create ceph generator dir
  file: path="{{ ceph.dir.etc }}" state=directory

- name: Copy ceph generator files
  copy: src="generator/" dest="{{ ceph.dir.etc }}"
  register: copy_gen_files

- name: Set generate secrets script permission
  when: copy_gen_files
  file:
    path: "{{ ceph.dir.etc }}/generate_secrets.sh"
    mode: "u+x"
  register: change_gen_per

- name: Generate ceph cluster fsid
  when: change_gen_per
  command: "./generate_secrets.sh fsid"
  args:
    chdir: "{{ ceph.dir.etc }}"
  register: ceph_fsid

- name: Generate ceph config and keys
  when: ceph_fsid
  environment:
    osd_cluster_network: "{{ ceph.osd.cluster_net }}"
    osd_public_network:  "{{ ceph.osd.public_net }}"
  command: "./generate_secrets.sh all {{ ceph_fsid.stdout }}"
  args:
    chdir: "{{ ceph.dir.etc }}"
  register: gen_config_keys

- name: Check ceph namespace
  when: gen_config_keys
  command: "{{ dir.bin }}/kubectl --kubeconfig={{ kubernetes.config.admin }} get namespaces | grep ceph"
  register: check_ceph_namespace
  ignore_errors: true

- name: Create ceph namespace
  when: check_ceph_namespace|failed
  command: "{{ dir.bin }}/kubectl create namespace ceph"

- name: Create secret generic to k8s
  when: gen_config_keys and copy_gen_files
  command: "{{ item }}"
  with_items:
    - "{{ dir.bin }}/kubectl --kubeconfig={{ kubernetes.config.admin }} create secret generic ceph-conf-combined --from-file=ceph.conf --from-file=ceph.client.admin.keyring --from-file=ceph.mon.keyring --namespace=ceph"
    - "{{ dir.bin }}/kubectl --kubeconfig={{ kubernetes.config.admin }} create secret generic ceph-bootstrap-rgw-keyring --from-file=ceph.keyring=ceph.rgw.keyring --namespace=ceph"
    - "{{ dir.bin }}/kubectl --kubeconfig={{ kubernetes.config.admin }} create secret generic ceph-bootstrap-mds-keyring --from-file=ceph.keyring=ceph.mds.keyring --namespace=ceph"
    - "{{ dir.bin }}/kubectl --kubeconfig={{ kubernetes.config.admin }} create secret generic ceph-bootstrap-osd-keyring --from-file=ceph.keyring=ceph.osd.keyring --namespace=ceph"
    - "{{ dir.bin }}/kubectl --kubeconfig={{ kubernetes.config.admin }} create secret generic ceph-client-key --from-file=ceph-client-key --namespace=ceph"
  args:
    chdir: "{{ ceph.dir.etc }}"
