---

- name: Override registry repos
  when: 'img is defined'
  set_fact:
    repos: "{{ img.repos }}"

- name: Override local registry repos
  when: 'img is defined and registry'
  set_fact:
    repos: "{{ registry_url }}/"

- name: "Check {{ img.name }} image already exists"
  when: img is defined
  shell: |
    {{ dir.bin }}/docker images | awk '{print $1":"$2}' | grep -o '{{ repos }}{{ img.name }}:{{ img.tag }}'
  run_once: true
  ignore_errors: True
  register: check_image

- name: "Pull {{ img.name }} image"
  when: img is defined and check_image.stdout == '' and pre_pull|default(true)
  command: |
    {{ dir.bin }}/docker pull {{ repos }}{{ img.name }}:{{ img.tag }}
  register: pull_result
  until: pull_result|succeeded
  retries: 4

- name: Create archive tmp directory
  when: img is defined and archive|default(false)
  file: path="{{ dir.images }}" state=directory

- name: "Archive {{ img.name }} image"
  when:
    - archive|default(false)
    - pull_result|succeeded or check_image.stdout|int > 0
  command: |
    {{ dir.bin }}/docker save {{ img.repos }}{{ img.name }}:{{ img.tag }} \
                > {{ dir.images }}/{{ img.name }}-{{ img.tag }}-image.tar
  register: archive_image

- name: "Tag {{ img.name }} image"
  when:
    - push|default(false)
    - pull_result|succeeded or check_image.stdout|int > 0
  command: |
    {{ dir.bin }}/docker tag {{ repos }}{{ img.name }}:{{ img.tag }} \
               {{ item }}/{{ img.name }}:{{ img.tag }}
  with_items: "{{ insecure_registrys }}"
  register: tag_image

- name: "Push {{ img.name }} image to registry"
  when:
    - tag_image
    - push|default(false)
    - pull_result|succeeded or check_image.stdout|int > 0
  command: |
    {{ dir.bin }}/docker push {{ item }}/{{ img.name }}:{{ img.tag }}
  with_items: "{{ insecure_registrys }}"
  register: push_image

- name: "Remove {{ img.name }} image tag"
  when:
    - push_image
    - push|default(false)
    - pull_result|succeeded or check_image.stdout|int > 0
  command: |
    {{ dir.bin }}/docker rmi {{ item }}/{{ img.name }}:{{ img.tag }}
  with_items: "{{ insecure_registrys }}"
  register: remove_image
